@import "open-props/style";
@import "open-props/normalize";
@import "open-props/media";
@import "open-props/buttons";

.App {
    text-align: center;
}

.App-logo {
    height: 40vmin;
    pointer-events: none;
}

@media (prefers-reduced-motion: no-preference) {
    .App-logo {
        animation: App-logo-spin infinite 20s linear;
    }
}

.App-header {
    background-color: #282c34;
    min-height: 100vh;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    font-size: calc(10px + 2vmin);
    color: white;
}

.App-link {
    color: #61dafb;
}

@keyframes App-logo-spin {
    from {
        transform: rotate(0deg);
    }
    to {
        transform: rotate(360deg);
    }
}


body {
    display: grid;
    place-content: center;
    padding-inline: var(--size-5);
}

main {
    display: flex;
    flex-wrap: wrap;
    place-content: center;
    gap: var(--size-5);
}

.user svg {
    stroke: currentColor;
}

.user {
    inline-size: var(--size-fluid-7);
    aspect-ratio: var(--ratio-square);
    border-radius: var(--radius-round);
    border: var(--border-size-1) solid var(--surface-4);
    display: flex;
    align-items: stretch;
    justify-content: stretch;
    align-items: center;
    justify-content: center;
    position: relative;
}

button.user > svg {
    --_icon-size: var(--size-fluid-4);
}

.user > button {
    position: absolute;
    inset-block-start: 0;
    inset-inline-end: 0;
    border-radius: var(--radius-round);
    padding: .75ch;
    aspect-ratio: 1;
    flex-shrink: 0;
}

.user .new:not(button) {
    animation: var(--animation-slide-in-down),
    var(--animation-fade-in) forwards;
    animation-timing-function: var(--ease-elastic-3),
    var(--ease-3);
}

.labelled-input {
    display: flex;
    gap: var(--size-3);
    flex-wrap: wrap;
    align-items: center;
}

.user img {
    border-radius: inherit;
}

.warning-message {
    display: grid;
    grid-template-columns: var(--size-fluid-3) 1fr;
    gap: var(--size-3);
    align-items: center;
}

.warning-message > svg {
    inline-size: 100%;
    stroke: var(--text-2);
    fill: none;
    stroke-linecap: round;
    stroke-linejoin: round;
}

.icon-headline {
    display: flex;
    gap: var(--size-3);
    align-items: center;
}
.icon-headline > svg {
        inline-size: 2em;
        stroke: var(--text-2);
    fill: none;
    stroke-linecap: round;
    stroke-linejoin: round;
    }


/*Dialog*/
html:has(dialog[open][modal-mode="mega"]) {
    overflow: hidden;
}

dialog {
    display: grid;
    align-content: start;
    background: var(--surface-2);
    color: var(--text-1);
    max-inline-size: min(90vw, var(--size-content-3));
    margin: auto;
    padding: 0;
    position: fixed;
    inset: 0;
    border-radius: var(--radius-3);
    box-shadow: var(--shadow-6);
    z-index: var(--layer-important);
    overflow: hidden;
    transition: opacity .5s var(--ease-3);
}

@media (--motionOK) {
    animation: var(--animation-scale-down) forwards;
    animation-timing-function: var(--ease-squish-3);
}

@media (prefers-color-scheme: dark) {
    border-block-start: var(--border-size-1) solid var(--surface-3);
}

@media (--md-n-below) {
    dialog[modal-mode="mega"] {
        margin-block-end: 0;
        border-end-end-radius: 0;
        border-end-start-radius: 0;

        @media (--motionOK) {
            animation: var(--animation-slide-out-down) forwards;
            animation-timing-function: var(--ease-squish-2);
        }
    }
}

dialog:not([open]) {
    pointer-events: none;
    opacity: 0;
}

dialog[modal-mode="mega"]::backdrop {
    backdrop-filter: blur(25px);
}

dialog[modal-mode="mini"]::backdrop {
    backdrop-filter: none;
}

dialog::backdrop {
    transition: backdrop-filter .5s ease;
}

dialog[loading] {
    visibility: hidden;
}

dialog[open] {
    @media (--motionOK) {
        animation: var(--animation-slide-in-up) forwards;
    }
}

dialog > form {
    display: grid;
    grid-template-rows: auto 1fr auto;
    align-items: start;
    max-block-size: 80vh;
    max-block-size: 80dvb;
}

dialog > form > article {
    overflow-y: auto;
    max-block-size: 100%; /* safari */
    overscroll-behavior-y: contain;
    display: grid;
    justify-items: flex-start;
    gap: var(--size-3);
    box-shadow: var(--shadow-2);
    z-index: var(--layer-1);
    padding-inline: var(--size-5);
    padding-block: var(--size-3);
}

@media (prefers-color-scheme: light) {
    dialog > form > article {
        background: var(--surface-1);
    }

    dialog > form::-webkit-scrollbar {
        background: var(--surface-1);
    }
}


@media (prefers-color-scheme: dark) {
    dialog > form > article {
        border-block-start: var(--border-size-1) solid var(--surface-3);
    }
}

dialog > form > header {
    display: flex;
    gap: var(--size-3);
    justify-content: space-between;
    align-items: flex-start;
    padding-block: var(--size-3);
    padding-inline: var(--size-5);
}

dialog > form > header > button {
    border-radius: var(--radius-round);
    padding: .75ch;
    aspect-ratio: 1;
    flex-shrink: 0;
    place-items: center;
    stroke: currentColor;
    stroke-width: 3px;
}

dialog > form > footer {
    display: flex;
    flex-wrap: wrap;
    gap: var(--size-3);
    justify-content: space-between;
    align-items: flex-start;
    padding-inline: var(--size-5);
    padding-block: var(--size-3);
}

dialog > form > footer > menu {
    display: flex;
    flex-wrap: wrap;
    gap: var(--size-3);
    padding-inline-start: 0;
}

dialog > form > footer > menu:only-child {
    margin-inline-start: auto;
}

@media (max-width: 410px) {
    dialog > form > footer > menu:only-child button[type="reset"] {
        display: none;
    }
}


dialog > form > :is(header, footer) {
    background-color: var(--surface-2);

    @media (prefers-color-scheme: dark) {
        background-color: var(--surface-1);
    }
}
